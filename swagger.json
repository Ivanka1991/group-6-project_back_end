{
    "openapi": "3.0.1",
    "info": {
        "version": "2.0.0",
        "title": "Kapusta-finance API docs",
        "description": "API documentation for GoIT project 'Kapusta'. [Backend github repository](https://github.com/Ivanka1991/group-6-project_back_end)",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "consumes": [
        "application/json"
    ],
    "producers": [
        "application/json"
    ],
    "servers": [
        {
            "url": "https://kapusta-pro.herokuapp.com/"
        },
        {
            "url": "http://localhost:3000"
        }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "auth endpoints"
        },
        {
            "name": "Transactions",
            "description": "transactions endpoints"
        }
    ],
    "paths": {
        "/api/auth/signup": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User registration",
                "parameters": [],
                "requestBody": {
                    "description": "Registration's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SignupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {}
                    },
                    "409": {
                        "description": "Email in use",
                        "content": {}
                    }
                }
            }
        },
        "/api/auth/verify/:verifyToken": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "User verify",
                "parameters": [],
                "requestBody": {
                    "description": "Authentication's object",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Verification success"
                    },
                    "404": {
                        "description": "User not found by token during email verification",
                        "content": {}
                    }
                }
            }
        },
        "/api/auth/resendVerification": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User authentication",
                "parameters": [],
                "requestBody": {
                    "description": "Authentication's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/LoginRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {}
                    },
                    "403": {
                        "description": "Email or password is wrong",
                        "content": {}
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {}
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User login",
                "parameters": [],
                "requestBody": {
                    "description": "Authentication's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {}
                    },
                    "403": {
                        "description": "Email or password is wrong",
                        "content": {}
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {}
                    }
                }
            }
        },
        "/api/auth/current": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Current user",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No token provided",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized (invalid access token)",
                        "content": {}
                    },
                    "404": {
                        "description": "Invalid user",
                        "content": {}
                    }
                }
            }
        },
        "/api/auth/avatars": {
            "patch": {
                "tags": [
                    "Auth"
                ],
                "summary": "User avatar",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvatarsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User logout",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogoutResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No token provided",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized (invalid access token)",
                        "content": {}
                    },
                    "404": {
                        "description": "Invalid user",
                        "content": {}
                    }
                }
            }
        },
        "/api/auth/setBalance/": {
            "patch": {
                "tags": [
                    "Auth"
                ],
                "summary": "SetBalance",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "description": "Set balance body",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetBalanceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User's new balance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetBalanceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {}
                    }
                }
            }
        },
        "/api/transactions/addIncome": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Adding a revenue transaction",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "description": "Transactions object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionAddIncomeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionAddIncomeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {}
                    }
                }
            }
        },
        "/api/transactions/addExpense": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Adding an expense transaction",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "description": "Transactions object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionAddExpenseRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionAddExpenseResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {}
                    }
                }
            }
        },
        "/api/transactions/getExpenseByDate/{date}": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transaction",
                "parameters": [
                    {
                        "in": "path",
                        "name": "date",
                        "required": true,
                        "description": "Date of transactions ",
                        "schema": {
                            "type": "string",
                            "format": "yyyy-mm-dd"
                        },
                        "example": "2021-10-06"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsExpenseByDate"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid access token)",
                        "content": {}
                    }
                }
            }
        },
        "/api/transactions/getIncomeByDate/{date}": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transaction",
                "parameters": [
                    {
                        "in": "path",
                        "name": "date",
                        "required": true,
                        "description": "Date of transactions ",
                        "schema": {
                            "type": "string",
                            "format": "yyyy-mm-dd"
                        },
                        "example": "2021-10-06"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsIncomeByDate"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid access token)",
                        "content": {}
                    }
                }
            }
        },
        "/api/transactions/getExpenseByMonth": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get expense transactions by month",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsByMonth"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid access token)",
                        "content": {}
                    }
                }
            }
        },
        "/api/transactions/getIncomeByMonth": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get income transactions by month",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsByMonth"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid access token)",
                        "content": {}
                    }
                }
            }
        },
        "/api/transactions/getExpenseDetail/{date}": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transaction",
                "parameters": [
                    {
                        "in": "path",
                        "name": "date",
                        "required": true,
                        "description": "Month of transactions ",
                        "schema": {
                            "type": "string",
                            "format": "yyyy-mm"
                        },
                        "example": "2021-10"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsExpenseDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid access token)",
                        "content": {}
                    }
                }
            }
        },
        "/api/transactions/getIncomeDetail/{date}": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transaction",
                "parameters": [
                    {
                        "in": "path",
                        "name": "date",
                        "required": true,
                        "description": "Month of transactions ",
                        "schema": {
                            "type": "string",
                            "format": "yyyy-mm"
                        },
                        "example": "2021-10"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsIncomeDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid access token)",
                        "content": {}
                    }
                }
            }
        },
        "/api/transactions/getLast": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get last transactions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "count",
                        "required": false,
                        "description": "The numbers of last transactions to return",
                        "schema": {
                            "type": "number"
                        },
                        "example": "3"
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsExpenseByDate"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid access token)",
                        "content": {}
                    }
                }
            }
        },
        "/api/transactions/{transactionId}": {
            "delete": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Delete transaction",
                "parameters": [
                    {
                        "in": "path",
                        "name": "transactionId",
                        "required": true,
                        "description": "Transaction's id (_id field in transaction object)",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {}
                    },
                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized (invalid access token)",
                        "content": {}
                    },
                    "404": {
                        "description": "Transactions not found",
                        "content": {}
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "SignupRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "password123"
                    }
                }
            },
            "SignupResponse": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "password123"
                    }
                }
            },
            "example": {
                "email": "user@example.com",
                "password": "password123"
            },
            "LoginResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "Session's access token (needed for all requests)",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
                    },
                    "user": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "User's name"
                            },
                            "email": {
                                "type": "string",
                                "description": "User's email",
                                "format": "email"
                            }
                        }
                    }
                },
                "example": {
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxNjliOTk5OWFhMWI1OGMxMzE3OGU3NSIsImlhdCI6MTYzNDMxODc0NX0.nKbAAM399iINJFivkFb8Ne2Z7a9rMXrdr3L21remrPs",
                    "user": {
                        "email": "user@example.com"
                    }
                }
            },
            "CurrentResponse": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "object",
                        "properties": {
                            "_id": {
                                "type": "string",
                                "description": "User's id"
                            },
                            "email": {
                                "type": "string",
                                "description": "User's email",
                                "format": "email"
                            }
                        }
                    }
                },
                "example": {
                    "user": {
                        "_id": "User's id",
                        "email": "user@example.com"
                    }
                }
            },
            "AvatarsResponse": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "object",
                        "properties": {
                            "avatarURL": {
                                "type": "string",
                                "description": "User's email",
                                "format": "email"
                            }
                        }
                    }
                },
                "example": {
                    "user": {
                        "avatarURL": "user_428485647634987643876047640387_avatar.png"
                    }
                }
            },
            "LogoutResponse": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string"
                            },
                            "code": {
                                "type": "integer"
                            },
                            "message": {
                                "type": "string",
                                "description": "Successful logout"
                            }
                        }
                    }
                },
                "example": {
                    "status": "success",
                    "code": 200,
                    "message": "Successful logout"
                }
            },
            "SetBalanceRequest": {
                "type": "object",
                "properties": {
                    "balance": {
                        "type": "integer",
                        "description": "new balance",
                        "example": 1000
                    }
                }
            },
            "SetBalanceResponse": {
                "type": "integer",
                "description": "balance",
                "example": {
                    "status": "success",
                    "code": 200,
                    "user": {
                        "newBalance": 1000
                    }
                }
            }
        },
        "TransactionAddIncomeRequest": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "isIncome": {
                    "type": "boolean"
                }
            },
            "example": {
                "date": "2021-09-26",
                "category": "Доход",
                "description": "ЗП",
                "amount": 110000,
                "isIncome": true
            }
        },
        "TransactionAddIncomeResponse": {
            "type": "object",
            "properties": {
                "transactionData": {
                    "type": "object",
                    "properties": {
                        "date": {
                            "type": "string"
                        },
                        "category": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "amount": {
                            "type": "number"
                        },
                        "isIncome": {
                            "type": "boolean"
                        },
                        "owner": {
                            "type": "string"
                        },
                        "_id": {
                            "type": "string"
                        }
                    }
                }
            },
            "example": {
                "transactionData": {
                    "date": "2021-09-26T00:00:00.000Z",
                    "category": "Доход",
                    "description": "лотерея",
                    "amount": 110000,
                    "isIncome": true,
                    "owner": "616579bfc5c00253cf2ca068",
                    "_id": "61657a4cfa20452eabaa44f8",
                    "createdAt": "2021-10-12T12:06:36.588Z",
                    "updatedAt": "2021-10-12T12:06:36.588Z"
                }
            }
        },
        "TransactionAddExpenseRequest": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "isIncome": {
                    "type": "boolean"
                }
            },
            "example": {
                "date": "2021-10-26",
                "category": "Образование",
                "description": "Курсы GoIt",
                "amount": 3000,
                "isIncome": false
            }
        },
        "TransactionAddExpenseResponse": {
            "type": "object",
            "properties": {
                "transactionData": {
                    "type": "object",
                    "properties": {
                        "date": {
                            "type": "string"
                        },
                        "category": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "amount": {
                            "type": "number"
                        },
                        "isIncome": {
                            "type": "boolean"
                        },
                        "owner": {
                            "type": "string"
                        },
                        "_id": {
                            "type": "string"
                        }
                    }
                }
            },
            "example": {
                "transactionData": {
                    "date": "2021-10-26T00:00:00.000Z",
                    "category": "Образование",
                    "description": "Курсы GoIt",
                    "amount": 3000,
                    "isIncome": false,
                    "owner": "6160726197186cf3ccc540b1",
                    "_id": "616365fa9d89d85b6e6a669c",
                    "createdAt": "2021-10-10T22:15:22.713Z",
                    "updatedAt": "2021-10-10T22:15:22.713Z"
                }
            }
        },
        "TransactionsExpenseByDate": {
            "type": "object",
            "properties": {
                "transactions": {
                    "type": "array",
                    "properties": {
                        "date": {
                            "type": "string"
                        },
                        "category": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "amount": {
                            "type": "number"
                        },
                        "isIncome": {
                            "type": "boolean"
                        },
                        "owner": {
                            "type": "string"
                        },
                        "_id": {
                            "type": "string"
                        }
                    }
                }
            },
            "example": {
                "transactions": [
                    {
                        "date": "2021-10-26T00:00:00.000Z",
                        "category": "Образование",
                        "description": "Курсы GoIt",
                        "amount": 3000,
                        "isIncome": false,
                        "owner": "6160726197186cf3ccc540b1",
                        "_id": "616365fa9d89d85b6e6a669c",
                        "createdAt": "2021-10-10T22:15:22.713Z",
                        "updatedAt": "2021-10-10T22:15:22.713Z"
                    }
                ]
            }
        },
        "TransactionsIncomeByDate": {
            "type": "object",
            "properties": {
                "transactions": {
                    "type": "array",
                    "properties": {
                        "date": {
                            "type": "string"
                        },
                        "category": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "amount": {
                            "type": "number"
                        },
                        "isIncome": {
                            "type": "boolean"
                        },
                        "owner": {
                            "type": "string"
                        },
                        "_id": {
                            "type": "string"
                        }
                    }
                }
            },
            "example": {
                "transactions": [
                    {
                        "date": "2021-10-26T00:00:00.000Z",
                        "category": "ЗП",
                        "description": "Основная",
                        "amount": 16000,
                        "isIncome": true,
                        "owner": "6160726197186cf3ccc540b1",
                        "_id": "616365fa9d89d85b6e6a667c",
                        "createdAt": "2021-10-10T22:15:22.713Z",
                        "updatedAt": "2021-10-10T22:15:22.713Z"
                    }
                ]
            }
        },
        "TransactionsByMonth": {
            "type": "object",
            "properties": {
                "transactions": {
                    "type": "array",
                    "properties": {
                        "_id": {
                            "type": "string"
                        },
                        "month": {
                            "type": "number"
                        },
                        "year": {
                            "type": "number"
                        },
                        "total": {
                            "type": "number"
                        }
                    }
                }
            },
            "example": {
                "expenseByMonth": [
                    {
                        "_id": {
                            "month": 10,
                            "year": 2021
                        },
                        "total": 4400
                    },
                    {
                        "_id": {
                            "month": 9,
                            "year": 2021
                        },
                        "total": 12800
                    }
                ]
            }
        },
        "TransactionsExpenseDetail": {
            "type": "object",
            "properties": {
                "expenseDetail": {
                    "type": "array",
                    "properties": {
                        "_id": {
                            "type": "string"
                        },
                        "descriptions": {
                            "type": "array",
                            "properties": {
                                "description": {
                                    "type": "string"
                                },
                                "total": {
                                    "type": "number"
                                }
                            }
                        },
                        "total": {
                            "type": "number"
                        }
                    }
                },
                "dates": {
                    "type": "object",
                    "properties": {
                        "minDate": {
                            "type": "string",
                            "format": "date"
                        },
                        "maxDate": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                }
            },
            "example": {
                "expenseDetail": [
                    {
                        "_id": "Развлечения",
                        "descriptions": [
                            {
                                "description": "Салют",
                                "total": 1000
                            },
                            {
                                "description": "Яхта",
                                "total": 3600
                            }
                        ],
                        "total": 4600
                    },
                    {
                        "_id": "Алкоголь",
                        "descriptions": [
                            {
                                "description": "Мартини",
                                "total": 160
                            }
                        ],
                        "total": 160
                    },
                    {
                        "_id": "Продукты",
                        "descriptions": [
                            {
                                "description": "Фрукты",
                                "total": 400
                            }
                        ],
                        "total": 400
                    }
                ]
            }
        },
        "TransactionsIncomeDetail": {
            "type": "object",
            "properties": {
                "expenseDetail": {
                    "type": "array",
                    "properties": {
                        "_id": {
                            "type": "string"
                        },
                        "descriptions": {
                            "type": "array",
                            "properties": {
                                "description": {
                                    "type": "string"
                                },
                                "total": {
                                    "type": "number"
                                }
                            }
                        },
                        "total": {
                            "type": "number"
                        }
                    }
                },
                "dates": {
                    "type": "object",
                    "properties": {
                        "minDate": {
                            "type": "string",
                            "format": "date"
                        },
                        "maxDate": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                }
            },
            "example": {
                "expenseDetail": [
                    {
                        "_id": "ЗП",
                        "descriptions": [
                            {
                                "description": "Основная",
                                "total": 16000
                            },
                            {
                                "description": "Доп.",
                                "total": 5000
                            }
                        ],
                        "total": 21000
                    }
                ]
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}